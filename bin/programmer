#!/usr/bin/env node

var debug = require('debug')('sensors:programmer'),
    msg = console.log,
    Promise = require('es6-promise').Promise,
    fs = require('fs'),
    path = require('path'),
    _ = require('lodash');

var Espruino = require('../lib/espruino');

var serialNum    = process.env.ESPRUINO_SERIAL_NUM,
    codeFilePath = path.join(__dirname, '..',  '/espruino/source.js');

msg('Programme espruino at with code', codeFilePath);

var serialPromise = programmeEspruino(serialNum, codeFilePath);
serialPromise
  .then(function (serialPort) {
    msg('Espruino has been programmed');
  })
  .catch(errorAndExit);

process
  .on('SIGINT', gracefulExit)
  .on('SIGTERM', gracefulExit);

function gracefulExit() {
  // disconnect open serial ports
  // via Espruino.closeAll() ?
  if (receiver) { receiver.close(); }
  process.exit();
}

function programmeEspruino(serialNum, filePath) {
  var finderPromise;

  if (serialNum) {
    finderPromise = Espruino.findBySerialNumber(serialNum);
  } else {
    finderPromise = Espruino.findEspruinos().then(_.first);
  }

  return finderPromise
    .then(function (serialPort) {
      if (!serialPort) {
        throw new Error('No serial port found');
      }

      debug('Uploading to serial port: ', serialPort, ' from: ', filePath);

      return Espruino.upload(serialPort, filePath)
        .then(function () {
          debug('Done uploading');
          return Espruino.save(serialPort);
        })
        .then(function () {
          debug('Saved');
        });
    })
    .catch(errorAndExit);
}

function error(err) {
  console.error(err.stack);
}

function errorAndExit(err) {
  error(err);
  gracefulExit();
}